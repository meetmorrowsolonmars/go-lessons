{
  "swagger": "2.0",
  "info": {
    "title": "Balance",
    "version": "1.0.0",
    "contact": {
      "name": "meetmorrowsolonmars",
      "email": "meetmorrowsolonmars@gmail.com"
    },
    "license": {
      "name": "BSD 3-Clause License",
      "url": "https://github.com/bbengfort/notes/LICENSE"
    }
  },
  "tags": [
    {
      "name": "BalanceService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/account": {
      "post": {
        "description": "Creates a account.",
        "operationId": "BalanceService_CreateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/balanceCreateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/balanceCreateAccountRequest"
            }
          }
        ],
        "tags": [
          "balance"
        ]
      }
    },
    "/api/v1/options": {
      "get": {
        "operationId": "BalanceService_GetOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/balanceGetOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "optionType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ACCOUNT",
              "TRANSFER"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "BalanceService"
        ]
      }
    },
    "/api/v1/transfer": {
      "post": {
        "description": "Creates a transfer operation to send money to another account.",
        "operationId": "BalanceService_CreateTransfer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/balanceCreateTransferResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/balanceCreateTransferRequest"
            }
          }
        ],
        "tags": [
          "balance"
        ]
      }
    }
  },
  "definitions": {
    "balanceAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "balanceCreateAccountRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "balanceCreateAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/balanceAccount"
        }
      }
    },
    "balanceCreateTransferRequest": {
      "type": "object",
      "properties": {
        "fromAccountId": {
          "type": "string"
        },
        "toAccountId": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/typeMoney"
        }
      },
      "required": [
        "amount"
      ]
    },
    "balanceCreateTransferResponse": {
      "type": "object"
    },
    "balanceGetOptionsResponse": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "balanceOptionType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ACCOUNT",
        "TRANSFER"
      ],
      "default": "UNKNOWN"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typeMoney": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "units": {
          "type": "string",
          "format": "int64",
          "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        }
      },
      "description": "Represents an amount of money with its currency type."
    }
  }
}
